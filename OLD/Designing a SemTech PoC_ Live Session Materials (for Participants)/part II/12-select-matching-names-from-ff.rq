# Match people from our database to resources in FactForge.net 
# using the names of the persons (foaf:name) and making use of the lucene connector in FactForge (inst:dbp-agents2)
# which provides us with the closest matches to the reource label (rdfs:label)

PREFIX imdb: <http://example.org/movieDB/>
PREFIX rank: <http://www.ontotext.com/owlim/RDFRank#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX inst: <http://www.ontotext.com/connectors/lucene/instance#>
PREFIX lucene: <http://www.ontotext.com/connectors/lucene#>

PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT * {
    { SELECT * { 
		?actor a imdb:Actor ; 
         foaf:name ?name; 
         rank:hasRDFRank5 ?r . 
     } ORDER BY DESC(?r) 
        LIMIT 100 }
    BIND(concat('''"''', str(?name) , '''"''') as ?nameQ)
    
    OPTIONAL {
    SERVICE <http://factforge.net/repositories/ff-news> {
        ?search a inst:dbp-agents2 ;
            lucene:query ?nameQ ;
            lucene:entities ?dbp_actor ;
            lucene:limit "5" .
        ?dbp_actor lucene:score ?score .
        FILTER(?score > 100)        
        ?dbp_actor rdfs:label ?dbp_label.
#        ?dbp_actor dbo:occupation dbr:Actor ; rdfs:label ?dbp_label.
         filter(contains(lcase(str(?name)), lcase(str(?dbp_label))))    
        }}
}