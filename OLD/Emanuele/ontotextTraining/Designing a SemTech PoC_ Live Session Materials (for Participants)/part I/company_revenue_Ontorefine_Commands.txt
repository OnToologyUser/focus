[
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 1 using expression grel:value.replace(\"! scope=\\\"row\\\" |\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 1",
    "expression": "grel:value.replace(\"! scope=\\\"row\\\" |\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 1 to Rank",
    "oldColumnName": "Column 1",
    "newColumnName": "Rank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Rank using expression grel:value.replace(\"=\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Rank",
    "expression": "grel:value.replace(\"=\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Rank using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Rank",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Column 3",
    "columnName": "Column 3"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 2 using expression grel:value.replace(\"[[\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2",
    "expression": "grel:value.replace(\"[[\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 2 using expression grel:value.replace(\"]]\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2",
    "expression": "grel:value.replace(\"]]\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-split",
    "description": "Split column Column 2 by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": "||",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 2 4 using expression grel:value.replace(/<[\\/]?\\w*>/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2 4",
    "expression": "grel:value.replace(/<[\\/]?\\w*>/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 2 4 using expression grel:value.replace(/\\{\\{ntsh\\D\\d+}\\}/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2 4",
    "expression": "grel:value.replace(/\\{\\{ntsh\\D\\d+}\\}/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 2 4 using expression grel:value.replace(/\\{\\{[Ll]oss\\}\\} /,\"-\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2 4",
    "expression": "grel:value.replace(/\\{\\{[Ll]oss\\}\\} /,\"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 2 4 using expression grel:value.replace(/\\{\\{\\w*\\}\\} /,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2 4",
    "expression": "grel:value.replace(/\\{\\{\\w*\\}\\} /,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 2 4 using expression grel:value.replace(\"%\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2 4",
    "expression": "grel:value.replace(\"%\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 4 to RevenueGrowth(Percent)",
    "oldColumnName": "Column 2 4",
    "newColumnName": "RevenueGrowth(Percent)"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column RevenueGrowth(Percent) using expression grel:value.replace(\" \",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "RevenueGrowth(Percent)",
    "expression": "grel:value.replace(\" \",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column RevenueGrowth(Percent) using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "RevenueGrowth(Percent)",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 3 to RevenueUSDBillions",
    "oldColumnName": "Column 2 3",
    "newColumnName": "RevenueUSDBillions"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column RevenueUSDBillions using expression grel:value.replace(\"$\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "RevenueUSDBillions",
    "expression": "grel:value.replace(\"$\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column RevenueUSDBillions using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "RevenueUSDBillions",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column RevenueUSD at index 4 based on column RevenueUSDBillions using expression grel:value*1000000000",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "newColumnName": "RevenueUSD",
    "columnInsertIndex": 4,
    "baseColumnName": "RevenueUSDBillions",
    "expression": "grel:value*1000000000",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 2 to Industry",
    "oldColumnName": "Column 2 2",
    "newColumnName": "Industry"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Industry using expression grel:value.replace(/.*\\|/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Industry",
    "expression": "grel:value.replace(/.*\\|/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 5 to Employees",
    "oldColumnName": "Column 2 5",
    "newColumnName": "Employees"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Employees using expression grel:value.replace(/.*\\| /,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Employees",
    "expression": "grel:value.replace(/.*\\| /,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Employees using expression grel:value.replace(\",\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Employees",
    "expression": "grel:value.replace(\",\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Employees using expression value.toNumber()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Employees",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Industry using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Industry",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 1 to Company",
    "oldColumnName": "Column 2 1",
    "newColumnName": "Company"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Company using expression grel:value.replace(/.*\\|/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Company",
    "expression": "grel:value.replace(/.*\\|/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Company using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Company",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Company using expression grel:value.replace(\"<br />\",\" \")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Company",
    "expression": "grel:value.replace(\"<br />\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Column 2 6 using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2 6",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-split",
    "description": "Split column Column 2 6 by separator",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Column 2 6",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": " ",
    "regex": false,
    "maxColumns": 0
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 6 1 to CountryCode1",
    "oldColumnName": "Column 2 6 1",
    "newColumnName": "CountryCode1"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 6 2 to CountryCode2",
    "oldColumnName": "Column 2 6 2",
    "newColumnName": "CountryCode2"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CountryCode1 using expression grel:value.replace(/.*\\|/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode1",
    "expression": "grel:value.replace(/.*\\|/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CountryCode1 using expression grel:value.replace(\"}}\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode1",
    "expression": "grel:value.replace(\"}}\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column CountryCode1",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode1",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Italy"
        ],
        "to": "ITA"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column CountryCode1",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode1",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "Japan"
        ],
        "to": "JPN"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column CountryCode1",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode1",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "USA"
        ],
        "to": "US"
      }
    ]
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column CountryCode1",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode1",
    "expression": "value",
    "edits": [
      {
        "fromBlank": false,
        "fromError": false,
        "from": [
          "UK"
        ],
        "to": "GBR"
      }
    ]
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 7 to Headquarters",
    "oldColumnName": "Column 2 7",
    "newColumnName": "Headquarters"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 8 to CEO",
    "oldColumnName": "Column 2 8",
    "newColumnName": "CEO"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CEO using expression grel:value.replace(/.*\\|/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CEO",
    "expression": "grel:value.replace(/.*\\|/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Column 2 9 to Reference",
    "oldColumnName": "Column 2 9",
    "newColumnName": "Reference"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CountryCode2 using expression grel:value.replace(\"}}\",\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode2",
    "expression": "grel:value.replace(\"}}\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CountryCode2 using expression grel:value.replace(/.*\\|/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode2",
    "expression": "grel:value.replace(/.*\\|/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Headquarters using expression grel:value.replace(/.*\\|/,\"\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Headquarters",
    "expression": "grel:value.replace(/.*\\|/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Company using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Company",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Industry using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Industry",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CountryCode1 using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode1",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CountryCode2 using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CountryCode2",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Headquarters using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Headquarters",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column CEO using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "CEO",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column Reference using expression value.trim()",
    "engineConfig": {
      "mode": "row-based",
      "facets": []
    },
    "columnName": "Reference",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  }
]