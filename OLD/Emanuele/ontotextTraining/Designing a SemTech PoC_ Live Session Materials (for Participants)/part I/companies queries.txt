===•	Company revenue <- show how we group results when plotting
PREFIX : <http://example.org/companies/>
select ?country ?revenue ?company where { 
	?company :RevenueUSDBillions ?revenue;
    	:CountryCode ?country.
} ORDER BY desc(?revenue)
# Stacked Bar Chart -> Cells Sum Revenue -> Columns Country -> Rows Company / Revenue
# how can we see it as a pie chart?

===•	Revenue grouped by country <- show how we group in our query (and see it as  a pie chart)
PREFIX : <http://example.org/companies/>
select ?country (sum(?revenue) as ?countryRevenue) where { 
	?company :RevenueUSDBillions ?revenue;
    	:CountryCode ?country.
} group by (?country) order by desc(?countryRevenue)
#pie chart

===•	countryGDP context <- Why Named Graphs are useful
prefix : <http://example.org/companies/>
select * where {?s :name ?o}
# select * from <http://example.org/countryGDP/> where {?s :name ?o}
# select * from <http://example.org/companies/> where {?s :name ?o}

===•	company, ceo, industry <- people and industries are literals, let’s change that
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX : <http://example.org/companies/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX spif: <http://spinrdf.org/spif#>
SELECT * WHERE {?c a :Company; :CEO ?person; :industry ?industry}

===•	people -> then run company, ceo, industry <- halfway there
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX : <http://example.org/companies/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX spif: <http://spinrdf.org/spif#>
DELETE {?c :CEO ?personName}
INSERT {
    ?c :CEO ?person.
    ?person a foaf:Person; foaf:name ?personName.
} WHERE {
    ?c a :Company; :CEO ?personName.
    BIND (spif:buildURI("<http://example.org/people/{?1}>", ENCODE_FOR_URI(?personName)) as ?person)
}

===•	industries -> then run company, ceo, industry <- done!
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX : <http://example.org/companies/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX spif: <http://spinrdf.org/spif#>
DELETE {?c :industry ?industryName}
INSERT {
    ?c :industry ?industry.
    ?industry a :Industry; rdf:label ?industryName.
} WHERE {
    ?c a :Company; :industry ?industryName.
    BIND (spif:buildURI("<http://example.org/industries/{?1}>", ENCODE_FOR_URI(?industryName)) as ?industry)
}

===Let’s look at the :CountryCode again ->
prefix : <http://example.org/companies/>
select distinct ?code where {?s :CountryCode ?code} 

================= Before the steps below you also need to add data from GeoNames into a named graph in your repository.
================= See workflow description file for more info.
===•	Match GeoNames and GDP countries
PREFIX countries: <http://example.org/countries/>
PREFIX : <http://example.org/companies/>
prefix gdp: <http://example.org/gdp/>
SELECT ?cGeoNames ?name ?isoCode ?cGDP WHERE {
    ?cGeoNames countries:name ?name; countries:isoCode ?isoCode; countries:iso3Code ?iso3Code; countries:fipsCode ?fipsCode.
    ?cGDP a :Country; :name ?name
}
===•	owl:sameAs GeoNames and GDP countries
PREFIX countries: <http://example.org/countries/>
PREFIX : <http://example.org/companies/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
prefix gdp: <http://example.org/gdp/>
INSERT {?cGeoNames owl:sameAs ?cGDP} WHERE {
    ?cGeoNames countries:name ?name; countries:isoCode ?isoCode; countries:iso3Code ?iso3Code; countries:fipsCode ?fipsCode.
    ?cGDP a :Country; :name ?name
}

===•	Match GeoNames and company countries
PREFIX countries: <http://example.org/countries/>
PREFIX : <http://example.org/companies/>
prefix gdp: <http://example.org/gdp/>
SELECT ?cGeoNames ?name ?isoCode ?company WHERE {
    ?cGeoNames countries:name ?name; countries:isoCode ?isoCode; countries:iso3Code ?iso3Code; countries:fipsCode ?fipsCode.
    ?company a :Company
    {?company :CountryCode ?isoCode}
    UNION
    {?company :CountryCode ?iso3Code}
    UNION
    {?company :CountryCode ?fipsCode}
}

===•	company hasCountry cGeoNames
PREFIX countries: <http://example.org/countries/>
PREFIX : <http://example.org/companies/>
prefix gdp: <http://example.org/gdp/>
INSERT {?company :hasCountry ?cGeoNames} WHERE {
    ?cGeoNames countries:name ?name; countries:isoCode ?isoCode; countries:iso3Code ?iso3Code; countries:fipsCode ?fipsCode.
    ?company a :Company
    {?company :CountryCode ?isoCode}
    UNION
    {?company :CountryCode ?iso3Code}
    UNION
    {?company :CountryCode ?fipsCode}
}

===•	Countries with companies
PREFIX : <http://example.org/companies/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
select distinct ?rank ?country ?gdp where { 
	?country a :Country; :rank ?rank; :GDPUSDBillions ?GDP.
    ?company a :Company; :hasCountry/owl:sameAs ?country.
} ORDER BY ?rank

===•	Countries with no companies
PREFIX : <http://example.org/companies/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
select * where { 
	?country a :Country; :rank ?rank; :GDPUSDBillions ?GDP.
    FILTER NOT EXISTS {?company a :Company; :hasCountry/owl:sameAs ?country.}
} ORDER BY ?rank

===•	revenue as fraction of GDP <- Visualize!
PREFIX : <http://example.org/companies/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
select ?companyName ?country ?revenue ?GDP (xsd:float(?revenue)/xsd:float(?GDP) AS ?fraction) where { 
	?company a :Company;
          :name ?companyName;
          :RevenueUSDBillions ?revenue;
          :hasCountry ?country.
    ?country owl:sameAs/:GDPUSDBillions ?GDP.
} ORDER BY desc(?fraction)
# Visualize Pivot Table -> Stacked Bar Chart -> Cells Sum fraction; Columns country; Rows companyName.