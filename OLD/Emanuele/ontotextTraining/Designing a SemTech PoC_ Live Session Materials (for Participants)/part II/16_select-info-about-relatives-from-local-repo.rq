# Select information about the top 100 actors and their relatives 
# after we have inserted all data in our repository

PREFIX imdb: <http://example.org/movieDB/>
PREFIX rank: <http://www.ontotext.com/owlim/RDFRank#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX inst: <http://www.ontotext.com/connectors/lucene/instance#>
PREFIX lucene: <http://www.ontotext.com/connectors/lucene#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

SELECT * {
    { SELECT * { 
            ?actor a imdb:Actor ; 
                   foaf:name ?name; 
                   rank:hasRDFRank5 ?r . 
        } order by desc(?r) 
        LIMIT 100 }
    ?actor skos:exactMatch / imdb:relativeOf ?dbp_relative . 
    FILTER NOT EXISTS {?actor skos:exactMatch ?dbp_relative }
    ?actor skos:exactMatch [?p ?dbp_relative] . 
    FILTER NOT EXISTS {?p2 rdfs:subPropertyOf ?p filter(?p != ?p2)}
}    